import random
from core.checks import perform_check
from core.damage_system import apply_damage
from models.scenes import SCENES

from colorama import Fore, Style, init
init(autoreset=True)


def resolve_action(entity, action_key):
    for action in entity.current_scene["actions"]:
        key = action[0]
        label = action[1]
        next_scene = action[2] if len(action) > 2 else None
        extra = action[3] if len(action) > 3 else {}

        if key == action_key:
            # –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            if "check" in extra:
                expr, _, dc = extra["check"].partition(" vs ")
                expr, dc = expr.strip(), int(dc.strip())

                success, total, rolls = perform_check(entity, expr, dc)

                if success:
                    print(Fore.GREEN + f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!"
                          + Fore.CYAN + f" ({total} –ø—Ä–æ—Ç–∏–≤ {dc}, –±—Ä–æ—Å–∫–∏: {rolls})")
                    if next_scene:
                        entity.current_scene = SCENES[next_scene]
                else:
                    print(Fore.RED + f"‚ùå –ü—Ä–æ–≤–∞–ª"
                          + Fore.CYAN + f" ({total} –ø—Ä–æ—Ç–∏–≤ {dc}, –±—Ä–æ—Å–∫–∏: {rolls})")
                    fail_scene = extra.get("fail_scene")
                    if fail_scene:
                        damage = random.randint(1, 3)
                        apply_damage(entity, damage)
                        if entity.is_alive():
                            entity.current_scene = SCENES[fail_scene]

            # –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏
            else:
                if next_scene:
                    print(Fore.YELLOW + f"‚û° {entity.name}"
                          + Fore.WHITE + f" –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ "
                          + Fore.MAGENTA + f"{next_scene}.")
                    entity.current_scene = SCENES[next_scene]
                else:
                    print(Fore.YELLOW + f"üèÅ {entity.name}"
                          + Fore.WHITE + f" –∑–∞–≤–µ—Ä—à–∏–ª –ø—É—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ–º "
                          + Fore.CYAN + f"{action_key}.")
            return

    # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    print(Fore.RED + f"‚ö† {entity.name} —Å–¥–µ–ª–∞–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ "
          + Fore.CYAN + f"({action_key}).")
