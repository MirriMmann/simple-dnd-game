# core/turn_manager.py
from core.game_state import GameState
from typing import List
from models.entities import Entity

# üé® –¶–≤–µ—Ç–∞
from colorama import Fore, Style, init
init(autoreset=True)


class TurnManager:
    def __init__(self, game_state: GameState):
        self.state = game_state
        self.order: List[Entity] = []
        self.index = 0
        self.running = False

    def build_order(self):
        self.order = [e for e in self.state.entities if e.is_alive()]
        self.index = 0

    def start(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª —Ö–æ–¥–æ–≤ (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π)."""
        self.running = True
        self.build_order()
        print(Fore.MAGENTA + Style.BRIGHT + f"\nüé≤ –ì–µ–π–º –º–∞—Å—Ç–µ—Ä: –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞. "
              f"–ò–≥—Ä–æ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏: {len(self.order)}")
        while self.running:
            if not self.order:
                print(Fore.MAGENTA + Style.BRIGHT + "‚ö† –ì–µ–π–º –º–∞—Å—Ç–µ—Ä: –ù–µ—Ç —Å—É—â–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ö–æ–¥–æ–≤. –í—ã—Ö–æ–¥.")
                break

            if self.index >= len(self.order):
                self.index = 0
                self.state.current_round += 1
                print(Fore.MAGENTA + Style.BRIGHT + f"\n--- –†–∞—É–Ω–¥ {self.state.current_round} ---")

            current = self.order[self.index]

            # –µ—Å–ª–∏ —É–º–µ—Ä ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if not current.is_alive():
                self.index += 1
                continue

            # –ø–æ—Å—ã–ª–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞—á–∞–ª–∞ —Ö–æ–¥–∞
            self.state.event_bus.publish("start_turn", current)

            self.build_order()
            try:
                pos = self.order.index(current)
                self.index = pos + 1
            except ValueError:
                self.index = min(self.index, len(self.order))

        print(Fore.MAGENTA + Style.BRIGHT + "üõë –ì–µ–π–º –º–∞—Å—Ç–µ—Ä: –¶–∏–∫–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

    def stop(self):
        self.running = False
